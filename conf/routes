# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

POST    /authentication              api.rest.UsuarioController.authenticar

GET     /logout                      @org.pac4j.play.ApplicationLogoutController.logout


# ------ CRUD de campeonatos
GET      /campeonatos                api.rest.CampeonatoController.todos

GET      /campeonatos/:id            api.rest.CampeonatoController.buscar(id: Long)

POST     /campeonatos                api.rest.CampeonatoController.inserir

POST     /campeonatos/:id            api.rest.CampeonatoController.atualizar(id: Long)

DELETE   /campeonatos/:id            api.rest.CampeonatoController.excluir(id: Long)

# ------- CRUD de eventos
GET      /eventos                    api.rest.EventoController.todos

GET      /eventos/:id                api.rest.EventoController.buscar(id: Long)

POST     /eventos                    api.rest.EventoController.inserir

POST     /eventos/:id                api.rest.EventoController.atualizar(id: Long)

DELETE   /eventos/:id                api.rest.EventoController.excluir(id: Long)

# ------- CRUD de resultados
POST     /resultados/:idEvento          api.rest.ResultadoController.inserir(idEvento: Long)

# ------- CRUD de times
GET      /times                         api.rest.TimeController.todos

GET      /times/:id                     api.rest.TimeController.buscar(id: Long)

POST     /times                         api.rest.TimeController.inserir

POST     /times/:id                     api.rest.TimeController.atualizar(id: Long)

DELETE   /times/:id                     api.rest.TimeController.excluir(id: Long)

# ------- CRUD de evento_apostas
GET      /apostas                       api.rest.EventoApostaController.todos

GET      /apostas/:id                   api.rest.EventoApostaController.buscar(id: Long)

POST     /apostas                       api.rest.EventoApostaController.inserir

POST     /apostas/:id                   api.rest.EventoApostaController.atualizar(id: Long)

# ------- CRUD de taxas
GET      /taxas                         api.rest.TaxaController.todos

GET      /taxas/:idAposta               api.rest.TaxaController.buscar(idAposta: Long)

POST     /taxas                         api.rest.TaxaController.inserir

DELETE   /taxas/:id                     api.rest.TaxaController.excluir(id: Long)

# ------- CRUD de bilhetes
GET      /bilhetes                      api.rest.BilheteController.todos

GET      /bilhetes/:codigo              api.rest.BilheteController.buscar(codigo: String)

POST     /bilhetes                      api.rest.BilheteController.inserir()

DELETE   /bilhetes/:id                  api.rest.BilheteController.cancelar(id: Long)

GET      /bilhetes/:codigo/impressao     api.rest.BilheteController.imprimir(codigo: String)

# ------- CRUD de usuarios

POST     /usuarios                      api.rest.UsuarioController.inserir

POST     /usuarios/:id                  api.rest.UsuarioController.atualizar(id: Long)

DELETE   /usuarios/:id                  api.rest.UsuarioController.cancelar(id: Long)

GET     /usuarios/0                     api.rest.UsuarioController.usuario

#---------- CRUD perfil
GET     /perfil/0                     api.rest.PerfilController.perfil


# ------- CRUD de PIN
#POST     /pins                          api.rest.BilheteController.inserir

#GET      /pins/:id                      api.rest.BilheteController.buscar(id: Long)


# An example controller showing a sample home page
GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
