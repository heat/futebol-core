# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Segurança

POST    /autenticacaos              api.rest.seguranca.UsuarioController.authenticar

GET     /logout                      @org.pac4j.play.ApplicationLogoutController.logout

GET     /parametros                    api.rest.seguranca.ParametroController.todos

PUT     /parametros/:id                api.rest.seguranca.ParametroController.atualizar(id: Long)

POST     /usuarios                      api.rest.seguranca.UsuarioController.inserir

GET     /usuarios                       api.rest.seguranca.UsuarioController.todos

POST     /usuarios/:id                  api.rest.seguranca.UsuarioController.atualizar(id: Long)

DELETE   /usuarios/:id                  api.rest.seguranca.UsuarioController.cancelar(id: Long)

## Usuario corrente
GET     /usuarios/0                     api.rest.seguranca.UsuarioController.usuario

GET     /perfils/0                       api.rest.seguranca.PerfilController.perfil

PUT     /perfils/0                       api.rest.seguranca.PerfilController.atualizar

POST    /senhas                         api.rest.seguranca.UsuarioController.alterarSenha

# Rotas de gerenciamento de eventos esportivos

GET      /campeonatos         api.rest.admin.CampeonatoController.todos(nome: String ?= "", q: String ?= "", page: Integer ?= 0, limit: Integer ?= 0)

GET      /campeonatos/:id     api.rest.admin.CampeonatoController.buscar(id: Long)

POST     /campeonatos         api.rest.admin.CampeonatoController.inserir

PUT      /campeonatos/:id     api.rest.admin.CampeonatoController.atualizar(id: Long)

DELETE   /campeonatos/:id     api.rest.admin.CampeonatoController.excluir(id: Long)

GET      /times               api.rest.admin.TimeController.todos(nome: String ?= "", q: String ?= "", page: Integer ?= 0, limit: Integer ?= 0)

GET      /times/:id           api.rest.admin.TimeController.buscar(id: Long)

POST     /times               api.rest.admin.TimeController.inserir

PUT      /times/:id           api.rest.admin.TimeController.atualizar(id: Long)

DELETE   /times/:id           api.rest.admin.TimeController.excluir(id: Long)

GET      /eventos             api.rest.admin.EventoController.todos

GET      /eventos/:id         api.rest.admin.EventoController.buscar(id: Long)

POST     /eventos             api.rest.admin.EventoController.inserir

POST     /eventos/:id         api.rest.admin.EventoController.atualizar(id: Long)

DELETE   /eventos/:id         api.rest.admin.EventoController.excluir(id: Long)

GET      /resultados          api.rest.admin.ResultadoController.todos(evento: Long ?= 0L)

PUT      /resultados/:id      api.rest.admin.ResultadoController.inserir(id: Long)

POST    /finalizacao-evento             api.rest.admin.EventoController.finalizar

# Rotas de gerenciamento administrativo de apostas

GET     /odds                          api.rest.trading.OddController.todos

PUT     /odds/:id                      api.rest.trading.OddController.atualizar(id: Long)

GET      /apostas                       api.rest.admin.EventoApostaController.todos

GET      /apostas/:id                   api.rest.admin.EventoApostaController.buscar(id: Long)

POST     /apostas                       api.rest.admin.EventoApostaController.inserir

GET      /taxas                         api.rest.admin.TaxaController.buscar(aposta: Long)

POST     /taxas                         api.rest.admin.TaxaController.inserir

DELETE   /taxas/:id                     api.rest.admin.TaxaController.excluir(id: Long)

POST    /importacaos                   api.rest.admin.ImportacaoController.inserir

# Rota de operações em apostas

GET      /jogos                         api.rest.trading.JogoController.todos

GET      /jogos/:id                     api.rest.trading.JogoController.buscar(id: Long)

GET      /jogos/:id/taxas               api.rest.trading.JogoController.buscar(id: Long)

GET      /jogotaxas/:id                 api.rest.trading.TaxaJogoController.buscar(id: Long)

GET      /bilhetes                      api.rest.trading.BilheteController.todos(inicio: String ?= null, termino: String ?= null, aposta: String ?= null, dono: String ?= null, evento: String ?= null)

GET      /bilhetes/:codigo              api.rest.trading.BilheteController.buscar(codigo: String)

POST     /bilhetes                      api.rest.trading.BilheteController.inserir()

DELETE   /bilhetes/:id                  api.rest.trading.BilheteController.cancelar(id: Long)

GET      /bilhetes/:codigo/impressao    api.rest.trading.BilheteController.imprimir(codigo: String)

GET      /bilhetes/:codigo/detalhes     api.rest.trading.BilheteController.detalhe(codigo: String)

GET     /palpites                       api.rest.trading.BilheteController.buscarPalpites(bilhete: String)

POST     /pins                         api.rest.trading.PinController.inserir

GET      /pins/:id                     api.rest.trading.PinController.buscar(id: Long)

# Sistema fianceiro

POST    /saldos                        api.rest.financeiro.SaldoController.inserir

POST    /transferencia                 api.rest.financeiro.TransferenciaController.inserir

GET     /fechamento-simulacaos/:id     api.rest.financeiro.FechamentoController.simulacao(id: String)

GET     /fechamentos                   api.rest.financeiro.FechamentoController.fechamentos

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
